{"version":3,"sources":["Nav/Nav.js","Context/actions.js","Context/reducer.js","Context/context.js","Component/Word.js","Component/Quote.js","Component/InputField.js","Component/Stats.js","Component/StartDescription.js","Component/StartButton.js","Component/TypingTest.js","Hooks/UseForm.js","Pages/Login.js","Pages/Admin.js","App.js","serviceWorker.js","index.js"],"names":["Nav","Navbar","expand","variant","bg","Container","fluid","Col","className","Brand","as","Link","to","href","xl","Button","size","setInputState","dispatch","input","type","payload","initState","InputReducer","action","split","InputStateContext","React","createContext","InputDispatchContext","useInputState","context","useContext","undefined","Error","useInputDispatch","InputProvider","children","useReducer","Provider","value","Word","currentWord","i","id","word","wordStyle","padding","backgroundColor","length","style","Quote","startGame","setBtnText","pauseGame","isGamePaused","currentQuote","quoteIndex","setTime","time","calculateWPM","useState","quoteToDisplay","setQuoteToDisplay","prepCurrQuote","quote","mutatedQuote","map","eachWord","key","configQuote","useEffect","join","interval","setInterval","addOne","clearInterval","Row","display","flexDirection","flexWrap","InputField","prepNewQuote","downHandler","textBar","useRef","current","focus","window","addEventListener","removeEventListener","InputGroup","FormControl","placeholder","aria-label","aria-describedby","onChange","e","inputString","target","ref","disabled","Stats","wpm","position","StartDescription","StartButton","handleClick","text","onClick","TypingTest","isGameStarted","btnText","pickQuote","setWpm","accuracy","fetchQuote","a","requestOptions","method","headers","fetch","response","json","data","console","log","allTypedEntries","minute","grossWPM","toFixed","UseForm","form","username","password","loginInput","setLoginInput","isFilled","isFormFilled","checkFormPopulation","count","arr","Object","entries","handleChange","name","clearForm","Login","useForm","loginUser","user","body","JSON","stringify","URL","borderRadius","Planet","mood","color","Form","Group","controlId","Control","Admin","Label","rows","Card","Header","Body","title","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.33940f83.chunk.js","sourcesContent":["import React from 'react'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Nav = () => {\r\n    return (\r\n        <Navbar expand=\"lg\" variant=\"light\" bg=\"light\">\r\n            <Container fluid={'lg'}>\r\n                <Col className=\"mr-auto\">\r\n                    <Navbar.Brand as={Link} to=\"/\" href=\"#\">Typing Test </Navbar.Brand>\r\n                </Col>\r\n                <Col xl={'auto'}>\r\n                    <Button as={Link} to=\"/login\" variant=\"outline-danger\" size={'sm'}>Admin</Button>\r\n                </Col>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n","\r\nexport const setInputState = (dispatch, input) => {\r\n    dispatch({ type: 'SET_USER_INPUT', payload: input });\r\n\r\n}\r\n\r\n\r\nexport const calcWPM = (dispatch, input) => {\r\n    dispatch({ type: 'SET_STATS', payload: input })\r\n}\r\n\r\n","\r\nexport const initState = [\"\"]\r\n\r\nexport const InputReducer = (initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'SET_USER_INPUT':\r\n            return action.payload.split(' ');\r\n    }\r\n\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport { initState, InputReducer } from './reducer'\r\n\r\nconst InputStateContext = React.createContext();\r\nconst InputDispatchContext = React.createContext();\r\n\r\nexport const useInputState = () => {\r\n    const context = React.useContext(InputStateContext);\r\n    if (context === undefined) throw new Error('useInputeState must used within a InputStateProvider')\r\n    return context;\r\n}\r\n\r\nexport const useInputDispatch = () => {\r\n    const context = React.useContext(InputDispatchContext)\r\n    if (context === undefined) throw new Error(\"useInputDispatch must be used within a InputProvider\")\r\n    return context;\r\n}\r\n\r\nexport const InputProvider = ({ children }) => {\r\n    const [input, dispatch] = useReducer(InputReducer, initState);\r\n    return (\r\n        <InputStateContext.Provider value={input}>\r\n            <InputDispatchContext.Provider value={dispatch}>\r\n                {children}\r\n            </InputDispatchContext.Provider>\r\n        </InputStateContext.Provider>\r\n    )\r\n}","import React from 'react'\r\nimport { useInputState } from '../Context'\r\n\r\n\r\nconst green = 'rgba(0, 255, 0, 0.3)';\r\nconst red = 'rgba(255, 0, 0, 0.3)';\r\nconst lightGray = 'lightgrey'\r\n\r\n\r\n\r\nconst Word = ({ children, id, word }) => {\r\n\r\n    const input = useInputState();\r\n\r\n\r\n\r\n    const checkWord = (currentWord, i) => {\r\n        if (input[i] !== currentWord && input.length - 1 === i) {\r\n            return green\r\n        } else if (input[i] !== currentWord && input.length > i) {\r\n            return red\r\n        }\r\n\r\n    };\r\n\r\n    let color = checkWord(word, id);\r\n\r\n    const wordStyle = {\r\n        padding: '2px',\r\n        backgroundColor: color\r\n    };\r\n\r\n    return (\r\n        <span style={wordStyle} >\r\n            { children}\r\n        </span >\r\n    )\r\n}\r\n\r\nexport default Word\r\n","import React, { useState, useEffect } from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { useInputDispatch, useInputState } from '../Context'\r\nimport Word from './Word'\r\n\r\n\r\n\r\n\r\nconst Quote = ({ startGame, setBtnText, isGamePaused, pauseGame, quoteIndex, currentQuote, time, setTime, calculateWPM }) => {\r\n\r\n    const input = useInputState();\r\n    const dispatch = useInputDispatch();\r\n\r\n\r\n\r\n    const [quoteToDisplay, setQuoteToDisplay] = useState([]);\r\n\r\n\r\n    const container = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap'\r\n    }\r\n\r\n\r\n    const configQuote = (currentQuote) => {\r\n\r\n        return currentQuote.map((eachWord, i) =>\r\n\r\n            <Word key={i} word={eachWord} id={i} >\r\n\r\n                {eachWord}\r\n\r\n            </Word>\r\n        )\r\n    }\r\n\r\n\r\n    const prepCurrQuote = (quote) => {\r\n        let currentQuote = quote.split(' ');\r\n        let mutatedQuote = configQuote(currentQuote);\r\n        setQuoteToDisplay(mutatedQuote)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let inputString = input.join(' ');\r\n\r\n        if (inputString === currentQuote) {\r\n\r\n            pauseGame(true);\r\n            setBtnText('Start');\r\n            calculateWPM();\r\n        } else {\r\n            prepCurrQuote(currentQuote)\r\n        }\r\n\r\n\r\n    }, [input]);\r\n\r\n    useEffect(() => {\r\n        setTime(0);\r\n        let interval = setInterval(addOne, 1000);\r\n        pauseGame(false);\r\n        setBtnText('Next');\r\n        prepCurrQuote(currentQuote);\r\n        return () => clearInterval(interval);\r\n    }, [currentQuote])\r\n\r\n    const addOne = () => {\r\n\r\n        setTime((value) => value + 1);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"h-50 align-items-center panel\" >\r\n                <Col xl={11}>\r\n                    <div style={container}>\r\n                        {quoteToDisplay}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Quote\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { Row, Col, InputGroup, FormControl } from 'react-bootstrap'\r\nimport { setInputState, useInputDispatch, useInputState } from '../Context'\r\n\r\n\r\nconst InputField = ({ isGamePaused, prepNewQuote }) => {\r\n    const dispatch = useInputDispatch()\r\n    const input = useInputState()\r\n\r\n    const handleChange = (e) => {\r\n        let inputString = e.target.value;\r\n        setInputState(dispatch, inputString)\r\n\r\n\r\n    }\r\n\r\n    const downHandler = ({ key }) => {\r\n\r\n        if (key === 'Escape') prepNewQuote();\r\n\r\n    }\r\n\r\n\r\n\r\n    const textBar = useRef(null);\r\n\r\n    useEffect(() => {\r\n\r\n        if (!isGamePaused) textBar.current.focus();\r\n\r\n    }, [isGamePaused]);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', downHandler);\r\n        return () => {\r\n            window.removeEventListener('keydown', downHandler);\r\n        };\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <Row className=\"\">\r\n            <Col xl={11}>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        value={input.join(' ')}\r\n                        placeholder=\"Type here\"\r\n                        aria-label=\"Username\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        onChange={handleChange}\r\n                        ref={textBar}\r\n                        disabled={isGamePaused}\r\n                    />\r\n                </InputGroup>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default InputField\r\n","import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nconst Stats = ({ wpm }) => {\r\n\r\n\r\n    return (\r\n\r\n        <Row style={{ position: 'absolute' }}>\r\n            <Col>\r\n                Speed: {wpm} WPM\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Stats\r\n","import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\n\r\nconst StartDescription = () => {\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Row className=\"h-50 align-items-center panel\">\r\n            <Col>\r\n                <Row>\r\n                    <Col>\r\n                        Click <b>Start</b> to begin test.\r\n                </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        Press <b>ESC</b> To skip a quote.\r\n                </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row >\r\n    )\r\n}\r\n\r\nexport default StartDescription\r\n","import React, { useState } from 'react'\r\nimport { Row, Col, Button } from 'react-bootstrap'\r\n\r\nconst StartButton = ({ handleClick, text }) => {\r\n\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <Button variant=\"primary\" onClick={handleClick}> {text}</Button>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default StartButton\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Quote from './Quote';\r\nimport StartDescription from './StartDescription'\r\nimport InputField from './InputField';\r\nimport StartButton from './StartButton';\r\nimport { setInputState, useInputDispatch, useInputState } from '../Context'\r\nimport Stats from './Stats';\r\n\r\nconst URL = 'http://localhost:8080/quote'\r\n\r\n\r\n\r\n\r\n\r\nconst TypingTest = () => {\r\n\r\n\r\n\r\n    const [isGameStarted, startGame] = useState(false);\r\n    const [isGamePaused, pauseGame] = useState(true);\r\n\r\n    const [btnText, setBtnText] = useState('Start');\r\n\r\n    const [quoteIndex, setQuoteIndex] = useState(0);\r\n    const [currentQuote, pickQuote] = useState(' ');\r\n\r\n    const [time, setTime] = useState(0);\r\n    const [wpm, setWpm] = useState(0);\r\n    const [accuracy, setAccuracy] = useState(0);\r\n\r\n    const input = useInputState();\r\n    const dispatch = useInputDispatch()\r\n\r\n\r\n    const fetchQuote = async () => {\r\n\r\n        const requestOptions = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n        try {\r\n            let response = await fetch(URL, requestOptions);\r\n            let data = await response.json();\r\n\r\n            pickQuote(data.quote)\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const prepNewQuote = async () => {\r\n        setBtnText('Next')\r\n        setInputState(dispatch, \"\")\r\n        fetchQuote();\r\n\r\n        if (!isGameStarted) {\r\n            startGame(true)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const calculateWPM = () => {\r\n\r\n        let allTypedEntries = input.join(' ').length;\r\n        let minute = time / 60\r\n        let grossWPM = (allTypedEntries / 5) / minute;\r\n\r\n        console.log('Characters: ', allTypedEntries);\r\n        console.log('Minutes: ', minute);\r\n        console.log(\"Gross WPM :\", grossWPM);\r\n\r\n        setWpm(grossWPM.toFixed(2));\r\n\r\n\r\n    }\r\n\r\n    const calculateAccuracy = () => {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Row className=\"h-75 justify-content-md-center\">\r\n            <Col xl={8} className=\" h-50 align-self-center\">\r\n\r\n                {isGamePaused && isGameStarted ? <Stats wpm={wpm} accuracy={accuracy} /> : ' '}\r\n\r\n                {isGameStarted ? <Quote startGame={startGame} pauseGame={pauseGame} isGamePaused={isGamePaused} setBtnText={setBtnText} quoteIndex={quoteIndex} currentQuote={currentQuote} time={time} setTime={setTime} calculateWPM={calculateWPM} /> : <StartDescription />}\r\n                <InputField isGamePaused={isGamePaused} prepNewQuote={prepNewQuote} />\r\n                <StartButton handleClick={prepNewQuote} text={btnText} />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default TypingTest\r\n","import { useState } from 'react';\r\n\r\n\r\n\r\nconst UseForm = (form) => {\r\n\r\n\r\n    let [loginInput, setLoginInput] = useState({\r\n        username: '',\r\n        password: '',\r\n    });\r\n\r\n\r\n    let [isFilled, isFormFilled] = useState(true)\r\n\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n\r\n        setLoginInput({\r\n            ...loginInput,\r\n            [name]: value,\r\n        });\r\n        isFormFilled(checkFormPopulation(loginInput))\r\n\r\n    }\r\n\r\n    const clearForm = () => {\r\n\r\n        setLoginInput({});\r\n    }\r\n\r\n    const checkFormPopulation = (form) => {\r\n        let count = 0;\r\n        let arr = Object.entries(form);\r\n        for (let [key, value] of arr) {\r\n            if (value.length > 4) {\r\n                count++;\r\n            }\r\n        }\r\n        if (count == arr.length) {\r\n            return false\r\n        }\r\n\r\n        return true\r\n\r\n    }\r\n\r\n    return { handleChange, clearForm, loginInput, isFilled };\r\n}\r\n\r\nexport default UseForm; \r\n","import React from 'react'\r\nimport { Planet } from 'react-kawaii';\r\nimport useForm from '../Hooks/UseForm'\r\nimport { Row, Col, Form, FormControl, Button } from 'react-bootstrap'\r\n\r\nconst URL = 'http://localhost:8080/';\r\n\r\nconst Login = () => {\r\n\r\n    const kawaii = {\r\n        backgroundColor: '#16697a',\r\n        borderRadius: '10px'\r\n    }\r\n\r\n    const formHolder = {\r\n        backgroundColor: '#ffa62b',\r\n        borderRadius: '10px'\r\n\r\n    }\r\n\r\n    const { handleChange, clearForm, loginInput, isFilled } = useForm();\r\n\r\n    const loginUser = async (user) => {\r\n\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(user)\r\n        };\r\n\r\n        try {\r\n            let response = await fetch(URL + 'login', requestOptions);\r\n            let data = await response.json();\r\n            console.log(\"From server\", data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    const handleLogin = () => {\r\n        loginUser(loginInput);\r\n    }\r\n\r\n\r\n    return (\r\n        <Row className=\"h-50 justify-content-md-center align-items-end\">\r\n            <Col className=\"h-50 shadow\" xl={6} style={formHolder}>\r\n                <Row className=\"h-100\">\r\n                    <Col xl={4} className=\"h-100 d-flex align-items-center\" style={kawaii}>\r\n                        <Planet className=\"mx-auto\" size={100} mood=\"blissful\" color=\"#ffa62b\" />\r\n                    </Col>\r\n                    <Col xl={7} className=\"h-75 align-self-center\">\r\n                        <Form>\r\n                            <Form.Group controlId=\"formBasicEmail\">\r\n                                <Form.Control name=\"username\" value={loginInput.username} onChange={handleChange} type=\"username\" placeholder=\"Username\" />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicPassword\">\r\n                                <Form.Control name=\"password\" value={loginInput.password} onChange={handleChange} type=\"password\" placeholder=\"Password\" />\r\n                            </Form.Group>\r\n                            <Button onClick={handleLogin}\r\n                                variant=\"primary\"\r\n                                type=\"button\"\r\n                                disabled={isFilled}>\r\n                                Login\r\n                            </Button >\r\n                        </Form>\r\n                    </Col >\r\n                </Row>\r\n            </Col>\r\n\r\n\r\n        </Row >\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useEffect } from 'react'\r\nimport { Row, Col, Card, Button, Form } from 'react-bootstrap'\r\n\r\n\r\nconst Admin = () => {\r\n    return (\r\n        <Row className=\"h-75 justify-content-md-center align-items-center\">\r\n            <Col>\r\n                <Form>\r\n                    <Form.Group>\r\n                        <Form.Label>Add Quote</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Author\" />\r\n                    </Form.Group>\r\n                    <Form.Group >\r\n                        <Form.Control as=\"textarea\" placeholder=\"Quote\" rows={3} />\r\n                    </Form.Group>\r\n                </Form>\r\n                <Button variant={\"primary\"} size={\"sm\"}>Add</Button>\r\n            </Col>\r\n            <Col>\r\n                <Card>\r\n                    <Card.Header>\r\n                        <Row>\r\n                            <Col>\r\n                                Quote\r\n                            </Col>\r\n                            <Col xl=\"auto\">\r\n                                <Button variant={'primary'} size={'sm'}>Edit</Button>\r\n                            </Col>\r\n                            <Col xl=\"auto\">\r\n                                <Button variant={'danger'} size={'sm'}>Delete</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <blockquote className=\"blockquote mb-0\">\r\n                            <p>\r\n                                {' '}\r\n                                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere\r\n                                erat a ante.{' '}\r\n                            </p>\r\n                            <footer className=\"blockquote-footer\">\r\n                                Someone famous in <cite title=\"Source Title\">Source Title</cite>\r\n                            </footer>\r\n                        </blockquote>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Admin\r\n","import React from 'react';\nimport './App.css';\nimport { Container, Row } from 'react-bootstrap'\nimport { Nav as NavBar } from './Nav/Nav'\nimport Quote from './Component/Quote'\nimport Keyboard from './Component/Keyboard'\nimport InputField from './Component/InputField'\nimport Stats from './Component/Stats'\nimport { InputProvider } from './Context/context';\nimport TypingTest from './Component/TypingTest';\nimport Login from './Pages/Login';\nimport Admin from './Pages/Admin';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <InputProvider>\n        <Router>\n          <NavBar />\n          <Container className=\"h-100\" fluid={'xl'}>\n            <Switch>\n              <Route exact path=\"/\">\n                <TypingTest />\n              </Route>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/admin\">\n                <Admin />\n              </Route>\n            </Switch>\n\n          </Container>\n        </Router>\n      </InputProvider>\n    </div >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}